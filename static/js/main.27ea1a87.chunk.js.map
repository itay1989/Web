{"version":3,"sources":["SearchBox.js","Card.js","CardList.js","robots.js","Scroll.js","api/fetchWeather.js","SP.js","Clock.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","name","email","id","alt","src","CardList","robots","map","user","i","username","Scroll","props","style","overflow","border","height","children","fetchWeather","query","a","axios","get","params","q","units","APPID","data","SP","weathersearch","useState","setQuery","weather","setWeather","search","e","key","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","value","target","onKeyPress","main","sys","country","Math","round","temp","icon","description","Clock","state","time","this","setState","setInterval","currentTime","toLocaleTimeString","Component","App","onSearchChange","event","fetch","then","Response","json","users","filteredRobots","filter","robot","toLowerCase","includes","on","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27ea1a87.chunk.js","sourcesContent":["import react from 'react';\r\n\r\nconst SearchBox =({searchfield, searchChange }) => {\r\nreturn(\r\n    <div className='pa2'>\r\n\r\n<input\r\n className='pa3 ba b--green bg-light-yellow' \r\n type='search' \r\n placeholder='Search Robots' \r\n onChange={searchChange}\r\n />\r\n    </div>\r\n    \r\n);\r\n\r\n}\r\nexport default SearchBox;\r\n","import react from 'react';\r\n\r\nconst Card = ({name , email,id}) => {\r\nreturn(\r\n<div className='tc bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n    <img alt='Robots' src ={`https://robohash.org/${id}?100x100`} />\r\n    <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n    </div>\r\n\r\n</div>\r\n\r\n)\r\n\r\n}\r\n\r\nexport default Card;","import react from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n    return (\r\n    <div>\r\n        {\r\n        robots.map((user ,i) => {\r\n      return (\r\n           <Card\r\n            key= {i} \r\n      id={robots [i].id} \r\n      name={robots[i].name} \r\n      email={robots[i].email}/>  \r\n      );\r\n    })\r\n}\r\n    </div>\r\n    );\r\n}\r\nexport default CardList;","export const robots = [\n  {\n    id: \"lll\",\n    name: 'itay',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import react from 'react';\r\n\r\nconst Scroll = (props) => {\r\nreturn(\r\n\r\n    <div style={{overflow: 'scroll' ,border: '5px solid black',height: '800px'}}>\r\n{props.children}\r\n    </div>\r\n);\r\n\r\n};\r\nexport default Scroll;","import axios from 'axios';\r\n\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\r\nconst API_KEY = '0207cfe4e1e6df89d0d65423d6368f60';\r\n\r\nexport const fetchWeather = async (query) => {\r\n    const { data } = await axios.get(URL, {\r\n        params: {\r\n            q: query,\r\n            units: 'metric',\r\n            APPID: API_KEY,\r\n        }\r\n    });\r\n\r\n    return data;\r\n}","import React, { useState } from 'react';\r\n\r\nimport  { fetchWeather }  from './api/fetchWeather';\r\nimport './index.css';\r\n\r\nconst SP = ({weathersearch, searchChange}) => {\r\n    const [query, setQuery] = useState('');\r\n    const [weather, setWeather] = useState({});\r\n    \r\n    const search = async (e) => {\r\n        if(e.key === 'Enter') {\r\n            const data = await fetchWeather(query);\r\n\r\n            setWeather(data);\r\n            setQuery('');\r\n        }\r\n    }\r\n\r\n    const dateBuilder = (d) => {\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    \r\n        let day = days[d.getDay()];\r\n        let date = d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n    \r\n        return `${day} ${date} ${month} ${year}`\r\n      }\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n             <div className=\"date\">{dateBuilder(new Date())}</div>\r\n            <input type=\"text\"className=\"search\"placeholder=\"Enter your city to see Weather\"value={query}onChange={(e) => setQuery(e.target.value)}onKeyPress={search}/>\r\n            {weather.main && (\r\n                <div className=\"city\">\r\n                    <h2 className=\"city-name\">\r\n                        <span>{weather.name}</span>\r\n                        <sup>{weather.sys.country}</sup>\r\n                    </h2>\r\n                    <div className=\"city-temp\">\r\n                        {Math.round(weather.main.temp)}\r\n                        <sup>&deg;C</sup>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\r\n                        <p>{weather.weather[0].description}</p>\r\n                       \r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SP;","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nclass Clock extends Component {\r\n\r\n  constructor() {\r\n    super()\r\nthis.state={time:new Date()}\r\n  }\r\n\r\n  currentTime()\r\n  {\r\n    this.setState({\r\n      time: new Date()\r\n    })\r\n  }\r\n  componentWillMount()\r\n  {\r\nsetInterval(()=>this.currentTime(),1000)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <h1>\r\n        {this.state.time.toLocaleTimeString()}\r\n      </h1>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Clock;","import { Component } from 'react';\r\nimport SearchBox from './SearchBox';\r\nimport CardList from './CardList';\r\nimport {robots} from './robots';\r\nimport './App.css';\r\nimport Scroll from './Scroll';\r\nimport SP from './SP';\r\nimport Clock from './Clock';\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state ={\r\n          robots: robots,\r\n         searchfield:'',\r\n         weathersearch:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(Response=> Response.json())\r\n        .then(users => this.setState({ robots: users}))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n\r\n    }\r\n    \r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n            \r\n            })\r\n        return(\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SP searchChange={this.on}/>\r\n                <Clock/>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots}/>\r\n                    </Scroll>\r\n                    \r\n                    </div>\r\n                );\r\n            \r\n    }\r\n \r\n\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport APP from './App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n//import {robots} from './robots';\n\nReactDOM.render(\n <APP />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}