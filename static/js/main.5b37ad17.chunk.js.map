{"version":3,"sources":["SearchBox.js","Card.js","CardList.js","robots.js","Scroll.js","SearchPlace.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","name","email","id","alt","src","CardList","robots","map","user","i","username","Scroll","props","style","overflow","border","height","children","api","SearchPlace","weathersearch","useState","query","setQuery","setWeather","e","target","value","onKeyPress","evt","key","fetch","then","Response","json","result","console","log","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","App","onSearchChange","event","setState","state","users","this","filteredRobots","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b37ad17.chunk.js","sourcesContent":["import react from 'react';\r\n\r\nconst SearchBox =({searchfield, searchChange }) => {\r\nreturn(\r\n    <div className='pa2'>\r\n\r\n<input\r\n className='pa3 ba b--green bg-light-yellow' \r\n type='search' \r\n placeholder='Search Robots' \r\n onChange={searchChange}\r\n />\r\n    </div>\r\n    \r\n);\r\n\r\n}\r\nexport default SearchBox;\r\n","import react from 'react';\r\n\r\nconst Card = ({name , email,id}) => {\r\nreturn(\r\n<div className='tc bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n    <img alt='Robots' src ={`https://robohash.org/${id}?100x100`} />\r\n    <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n    </div>\r\n\r\n</div>\r\n\r\n)\r\n\r\n}\r\n\r\nexport default Card;","import react from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n    return (\r\n    <div>\r\n        {\r\n        robots.map((user ,i) => {\r\n      return (\r\n           <Card\r\n            key= {i} \r\n      id={robots [i].id} \r\n      name={robots[i].name} \r\n      email={robots[i].email}/>  \r\n      );\r\n    })\r\n}\r\n    </div>\r\n    );\r\n}\r\nexport default CardList;","export const robots = [\n  {\n    id: \"lll\",\n    name: 'itay',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import react from 'react';\r\n\r\nconst Scroll = (props) => {\r\nreturn(\r\n\r\n    <div style={{overflow: 'scroll' ,border: '5px solid black',height: '800px'}}>\r\n{props.children}\r\n    </div>\r\n);\r\n\r\n};\r\nexport default Scroll;","import React ,{useState} from 'react';\r\nimport './index.css'\r\n\r\n\r\nconst api = {\r\n    key: \"0207cfe4e1e6df89d0d65423d6368f60\",\r\n    baseUrl: \"api.openweathermap.org/data/2.5/\"\r\n}\r\n\r\n\r\nconst SearchPlace = ({weathersearch,searchChange})=>{\r\n    const [query, setQuery] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = evt => {\r\n    if (evt.key === \"Enter\") {\r\n      fetch(`${api.baseUrl}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then(Response => Response.json())\r\n        .then(result => {\r\n          setWeather(result);\r\n          setQuery('');\r\n          console.log(result);\r\n        });\r\n    }\r\n  }\r\n\r\n    const dateBuilder = (d) => {\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    \r\n        let day = days[d.getDay()];\r\n        let date = d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n    \r\n        return `${day} ${date} ${month} ${year}`\r\n      }\r\n\r\n    return(\r\n        \r\n        <div className='weather'>\r\n            <main>\r\n                <div className=\"search-tool\">\r\n                    <input\r\n                    type=\"text\"\r\n                    className=\"search-bar\"\r\n                    placeholder=\"Search...\"\r\n                    onChange={e => setQuery(e.target.value)}\r\n                    value={query}\r\n                    onKeyPress={search}\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"location-box\">\r\n                    <div className=\"location\">Ashdod , israel</div>\r\n                    <div className=\"date\">{dateBuilder(new Date())}</div>\r\n                </div>\r\n                <div className=\"weather-box\">\r\n                    <div className=\"temp\">15 C\r\n                    </div>\r\n                    <div className=\"weather\">sunny</div>\r\n\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\nexport default SearchPlace;","import { Component } from 'react';\r\nimport SearchBox from './SearchBox';\r\nimport CardList from './CardList';\r\nimport {robots} from './robots';\r\nimport './App.css';\r\nimport Scroll from './Scroll';\r\nimport SearchPlace from './SearchPlace';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state ={\r\n          robots: robots,\r\n         searchfield:'',\r\n         weathersearch:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(Response=> Response.json())\r\n        .then(users => this.setState({ robots: users}))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n\r\n    }\r\n    \r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n            \r\n            })\r\n        return(\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchPlace searchChange={this.onSearchChange}/>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots}/>\r\n                    </Scroll>\r\n                    \r\n                    </div>\r\n                );\r\n            \r\n    }\r\n \r\n\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport APP from './App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n//import {robots} from './robots';\n\nReactDOM.render(\n <APP />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}